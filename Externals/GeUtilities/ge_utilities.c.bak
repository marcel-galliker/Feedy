// *************************************************************************************************
//																				
//	ge_utilities: 
//																				
// *************************************************************************************************
//
//  This is a program that receives commands over tcp/ip and drives a eZ-Inkjet
//
//
//
// *************************************************************************************************
//
//    Copyright 2022 by Galliker-Engineering, Switzerland. All rights reserved.		
//    Written by Marcel Galliker.												
//																				
//
// *************************************************************************************************

#include "ge_utilities.h"

//--- char_to_wchar --------------------------------------------------------------
void char_to_wchar(wchar_t *puni, const char *pansi, int len)
{
	while (len>=0)
	{
		*puni = (unsigned char)*pansi;
		puni++;
		len--;
		if (*pansi==0) break;
		*pansi++;
	}
}

//--- TimetToFileTime -----------------------------------------------------
#ifdef WIN32
void TimetToFileTime( time_t t, LPFILETIME pft )
{
	LONGLONG ll = Int32x32To64(t, 10000000) + 116444736000000000;
	pft->dwLowDateTime = (DWORD) ll;
	pft->dwHighDateTime = ll >>32;
}
#endif

//--- FiletimeToTimet --------------------------------------------------
#ifdef WIN32
time_t FiletimeToTimet(const LPFILETIME pft)
{
	ULARGE_INTEGER ull;
	ull.LowPart = pft->dwLowDateTime;
	ull.HighPart = pft->dwHighDateTime;

	return ull.QuadPart / 10000000ULL - 11644473600ULL;
}
#else
time_t FiletimeToTimet(const UINT64 fileTime)
{
	return fileTime / 10000000ULL - 11644473600ULL;
}
#endif

//--- char_to_lower -------------------------------------------------
char* char_to_lower(const char *str, char *out)
{
	while (*str)
	{
		if (*str>='A' && *str<='Z') *out++=(*str++)+'a'-'A';
		else *out++=*str++;
	}

	*out=0;
	return out;
}

//--- strstart -------------------------------------
char* strstart(char *str, char *start)
{
	if (str==NULL) return 0;
	int len=(int)strlen(start);
	if (strncmp(str, start, len)==0) return str+len;
	return 0;
}

//--- strend --------------------------------------
int strend(char *str, char *end)
{
	int len=(int)strlen(str);
	int endlen=(int)strlen(end);
	if (endlen>len) return FALSE;
	if (stricmp(&str[len-endlen], end)==0) return TRUE;
	return FALSE;
}

//--- win_error ----------------
char * win_error(int err, char *str, int size)
{
	int len = sprintf(str, "%d: ", err);
	len += FormatMessageA(FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS,
		NULL, err, MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), &str[len], size-len, NULL);
	str[len-2]=0; // remove cr/lf
	return str;
}